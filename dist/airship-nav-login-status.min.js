/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var id_token = localStorage.getItem("id_token");
var elements = document.getElementsByClassName("airship-nav-login-status");
var signInButtonEl = document.createElement("a");
var dropDownContainer = document.createElement("div");
var userEmailEl = document.createElement("span");
var dropDownEl = document.createElement("ul");
var logoutEl = document.createElement("li");

if (elements) {
  Array.prototype.slice.call(elements).forEach(function (el) {
    return render(el);
  });
}
function render(element) {
  element.appendChild(signInButtonEl);
  signInButtonEl.innerHTML = "Sign In";
  signInButtonEl.href = "/signin";
  signInButtonEl.className = "airship-nav-login-status-signin";
  element.appendChild(dropDownContainer);
  dropDownContainer.appendChild(userEmailEl);
  dropDownContainer.appendChild(dropDownEl);
  dropDownEl.appendChild(logoutEl);
  dropDownEl.className = "airship-nav-login-status-dropdown airship-login-status-hidden";
  dropDownContainer.className = "airship-nav-login-status-logged-in airship-login-status-hidden";
  userEmailEl.className = "airship-nav-login-status-username";
  userEmailEl.addEventListener("click", function () {
    return toggleDropdown();
  });
  logoutEl.innerHTML = "Logout";
  logoutEl.className = "airship-nav-login-status-logout";
  logoutEl.addEventListener("click", function () {
    return logout();
  });
  if (id_token !== null) {
    getProfile(function (err, xhr) {
      if (xhr.status === 200) {
        userEmailEl.innerHTML = JSON.parse(xhr.response).email;
        toggleStatus();
      }
    });
  }
}

function toggleDropdown() {
  dropDownEl.classList.toggle("airship-login-status-hidden");
}

function toggleStatus() {
  signInButtonEl.classList.toggle("airship-login-status-hidden");
  signInButtonEl.classList.toggle("airship-nav-login-status-signin");
  dropDownContainer.classList.toggle("airship-login-status-hidden");
}

function getProfile(done) {
  var xhr = new XMLHttpRequest();
  xhr.open("GET", '/api/users/profile');
  xhr.setRequestHeader("Authorization", "bearer " + id_token);
  xhr.onload = function () {
    return done(null, xhr);
  };
  xhr.onerror = function () {
    return done(xhr.xhr);
  };
  xhr.send();
}

function logout() {
  delete localStorage.id_token;
  delete localStorage.account;
  delete localStorage.profile;
  toggleStatus();
}

/***/ })
/******/ ]);